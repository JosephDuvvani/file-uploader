// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String   @unique
  firstname String
  lastname  String?
  folders   Folder[]
  files     File[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  files     File[]
  children  Folder[] @relation("FolderToFolder")
  parent    Folder?  @relation("FolderToFolder", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentId  Int?
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId   Int
}

model File {
  id        Int      @id @default(autoincrement())
  filename  String
  size      Int
  mimetype  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  folderId  Int
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId   Int
}
